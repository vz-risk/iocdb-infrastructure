#============================================================================
# Used to update the iocdb cli components on:
#   1) the cli box (analyst-client (prod) cli box (dev))
#   2) the dispatcher (celery worker) box
#   3) the feed-client (prod only) box.  
#
# Note: Does not update celery, rabbitmq, etc.. only the iocdb cli 
#         components.
#============================================================================

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Update the cli box
#   Use these:
#   <DEST-HOST> / <DEST-IP>: (Destination host name and IP)
#     tac-client-48   / 10.114.75.148   (prod) 
#     iocdb-cli-dev-1 / 153.39.107.117  (dev and qa)
#     iocdb-cli-qa-1  / 166.34.103.215  (qa)
#   <PROV-HOST>: (Provisioner host name)
#     iocdb-prov       (prod)
#     iocdb-prov-dev-1 (dev)
#     iocdb-prov-qa-1  (qa)
#   <BRANCH-NAME> 
#     master   (prod)
#     dev-ci   (dev)
#     master   (qa)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#------------------------------------------------------------------------
# 1 Backup important directories and files on the <DEST-HOST> box
#------------------------------------------------------------------------

# On the destination host
ssh <DEST-HOST>

# Backup the /src directory: 
sudo mv /src /tmp/src-$(date +%Y%m%d)

# Archive somewhere safe
sudo tar -czvf ~/src-$(date +%Y%m%d_%H%M%S).tar.gz /tmp/src-$(date +%Y%m%d)

# Take a simple baseline for later samity check
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary > /tmp/baseline
iocdb --observable_values 1.1.1.1 --encoder summary | wc > /tmp/baseline-wc

#------------------------------------------------------------------------
# 2 - Update the iocdb-prov box in preparation for install
#------------------------------------------------------------------------

# on the provisioner host

First, follow the instructions in ./update-provisioner.txt
ssh <PROV-HOST>

# Set environment variables
export NODE_NAME="<DEST-HOST>"
export NODE_IP="<DEST-IP>"

#------------------------------------------------------------------------
# 3 - Modify the recipes for the provisioner to tailor it to your install
#------------------------------------------------------------------------

# Verify the node file points to the correct ip and node name and it's runlist is for iocdb-cli.
#  Note: If this is a new node, you will want to create a new node file as described in the 
#        installation procedures.
# 
cat /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

# Backup the existing node file (if it exists)
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig

# If this file doesn't yet exist, chef may not have yet been installed to 
# the new machine.  Run the following command to bootstrap chef onto the new 
# host and create the node file.
cd /opt/iocdb_provisioner/iocdb-infrastructure
knife solo prepare $NODE_IP -N $NODE_NAME --bootstrap-version 11 --identity-file ~/.ssh/iocdb_nonprod_rsa

# Modify the run-list to contain only "iocdb-infrastructure::iocdb-client"   
vi /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

{
  "run_list": [
    "iocdb-infrastructure::iocdb-client"
  ],
  "automatic": {
    "ipaddress": "<DEST-IP>"
  }
}

#Set the branch name to <BRANCH_NAME>
#  e.g. master, dev-ci, etc..

# edit the iocdb-client.rb file
vi /opt/iocdb_provisioner/iocdb-infrastructure/recipes/iocdb-client.rb

# Change the following git url so that it contains @<BRANCH_NAME>#egg=iocdb 
#   (replace <BRANCH-NAME> with dev-ci or master)
python_pip 'iocdb' do
  package_name 'git+ssh://iocdb_prov@iocdb-staging/staged-repos/iocdb.git@<BRANCH-NAME>#egg=iocdb'
  options '-e'
end

#------------------------------------------------------------------------
# 4 - Run chef to install the update to the iocdb-cli box
#------------------------------------------------------------------------

# Run chef to update the iocdb-cli box
cd /opt/iocdb_provisioner/iocdb-infrastructure/
knife solo cook $NODE_IP -N $NODE_NAME --identity-file ~/.ssh/iocdb_nonprod_rsa

# Note: These warnings are normal:
  WARNING: Local cookbook_path '/opt/iocdb_provisioner/iocdb-infrastructure/site-cookbooks' does not exist
  WARNING: Local role_path 'roles' does not exist
  WARNING: Local data_bag_path 'data_bags' does not exist
  WARNING: Local environment_path 'environments' does not exist

# restore the original node file
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

#------------------------------------------------------------------------
# 5 - Configure the new host
#------------------------------------------------------------------------
# On the new host
ssh <DEST-HOST>

# Compare differences - You'll need to add any new configuration back after restoring original below
diff /tmp/src-$(date +%Y%m%d)/iocdb/iocdb/data/settings.yaml /src/iocdb/iocdb/data/settings.yaml

# Update the configuration file manually if needed.  Note: config is automatically installed 
#   now and should be correct. If not correct, a change needs to be made in the 
#   iocdb-infrastructure.git repo and checked in to add the changes to the template.

# Test it
iocdb --observable_values 1.1.1.1
# make sure these are like baseline in /tmp/baseline*
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary | wc

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# End of Update the cli box
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Update the cli on the dispatcher (celery worker) box
#   Use these:
#   <DEST-HOST> / <DEST-IP>: (Destination host name and IP)
#     dispatcher-51   / 10.114.75.151   (prod) 
#     iocdb-worker-dev-1 / 153.39.107.116  (dev and qa)
#     iocdb-worker-qa-1  / 166.34.103.213  (qa)
#   <PROV-HOST>: (Provisioner host name)
#     iocdb-prov       (prod)
#     iocdb-prov-dev-1 (dev)
#     iocdb-prov-qa-1  (qa)
#   <BRANCH-NAME> 
#     master   (prod)
#     dev-ci   (dev)
#     master   (qa)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#------------------------------------------------------------------------
# 1 Backup important directories and files on the <DEST-HOST> box
#------------------------------------------------------------------------

# On the destination host
ssh <DEST-HOST>

# Backup the /src directory: 
sudo mv /src /tmp/src-$(date +%Y%m%d)

# Archive somewhere safe
sudo tar -czvf ~/src-$(date +%Y%m%d_%H%M%S).tar.gz /tmp/src-$(date +%Y%m%d)

# Take a simple baseline for later samity check
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary > /tmp/baseline
iocdb --observable_values 1.1.1.1 --encoder summary | wc > /tmp/baseline-wc

#------------------------------------------------------------------------
# 2 - Update the iocdb-prov box in preparation for install
#------------------------------------------------------------------------

# on the provisioner host

First, follow the instructions in ./update-provisioner.txt
ssh <PROV-HOST>

# Set environment variables
export NODE_NAME="<DEST-HOST>"
export NODE_IP="<DEST-IP>"

#------------------------------------------------------------------------
# 3 - Modify the recipes for the provisioner to tailor it to your install
#------------------------------------------------------------------------

# Verify the node file points to the correct ip and node name and it's runlist is for iocdb-cli.
#  Note: If this is a new node, you will want to create a new node file as described in the 
#        installation procedures.
# 
cat /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

# Backup the existing node file (if it exists)
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig

# If this file doesn't yet exist, chef may not have yet been installed to 
# the new machine.  Run the following command to bootstrap chef onto the new 
# host and create the node file.
cd /opt/iocdb_provisioner/iocdb-infrastructure
knife solo prepare $NODE_IP -N $NODE_NAME --bootstrap-version 11 --identity-file ~/.ssh/iocdb_nonprod_rsa

# Modify the run-list to contain only "iocdb-infrastructure::iocdb-client"
vi /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

{
  "run_list": [
    "iocdb-infrastructure::iocdb-client"
  ],
  "automatic": {
    "ipaddress": "<DEST-IP>"
  }
}

#Set the branch name to <BRANCH_NAME>
#  e.g. master, dev-ci, etc..

# edit the iocdb-client.rb file
vi /opt/iocdb_provisioner/iocdb-infrastructure/recipes/iocdb-client.rb

# Change the following git url so that it contains @<BRANCH_NAME>#egg=iocdb 
#   (replace <BRANCH-NAME> with dev-ci or master)
python_pip 'iocdb' do
  package_name 'git+ssh://iocdb_prov@iocdb-staging/staged-repos/iocdb.git@<BRANCH-NAME>#egg=iocdb'
  options '-e'
end

#------------------------------------------------------------------------
# 4 - Run chef to install the update to the iocdb-cli box
#------------------------------------------------------------------------

# Run chef to update the iocdb-cli box
cd /opt/iocdb_provisioner/iocdb-infrastructure/
knife solo cook $NODE_IP -N $NODE_NAME --identity-file ~/.ssh/iocdb_nonprod_rsa

# Note: These warnings are normal:
  WARNING: Local cookbook_path '/opt/iocdb_provisioner/iocdb-infrastructure/site-cookbooks' does not exist
  WARNING: Local role_path 'roles' does not exist
  WARNING: Local data_bag_path 'data_bags' does not exist
  WARNING: Local environment_path 'environments' does not exist

# restore the original node file
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

#------------------------------------------------------------------------
# 5 - Configure the new host
#------------------------------------------------------------------------
# On the new host
ssh <DEST-HOST>

# Compare differences - You'll need to add any new configuration back after restoring original below
diff /tmp/src-$(date +%Y%m%d)/iocdb/iocdb/data/settings.yaml /src/iocdb/iocdb/data/settings.yaml

# Update the configuration file manually if needed.  Note: config is automatically installed 
#   now and should be correct. If not correct, a change needs to be made in the 
#   iocdb-infrastructure.git repo and checked in to add the changes to the template.

# Test it
iocdb --observable_values 1.1.1.1
# make sure these are like baseline in /tmp/baseline*
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary | wc

#------------------------------------------------------------------------
# 6 - Bounce the celery and rabbitmq processes
#------------------------------------------------------------------------

# open another terminal on the box and tail the logs
cd /var/data/log
tail -f *

# restart main processes in main terminal window while watching logs
sudo service celery-beat stop
sudo service celery-worker stop
sudo service rabbitmq-server stop

sudo service rabbitmq-server start
sudo service celery-worker start
sudo service celery-beat start


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# End of update the cli on the dispatcher (celery worker) box
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Update the feed clientbox
#   Use these:
#   <DEST-HOST> / <DEST-IP>: (Destination host name and IP)
#     feed-client-63   / 10.114.75.163   (prod) 
#   <PROV-HOST>: (Provisioner host name)
#     iocdb-prov       (prod)
#   <BRANCH-NAME> 
#     master   (prod)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#------------------------------------------------------------------------
# 0 Unlink existing iocdb link on the <DEST-HOST> box if it exists
#------------------------------------------------------------------------

ls -al /usr/local/bin/iocdb
unlink /usr/local/bin/iocdb

#------------------------------------------------------------------------
# 1 Backup important directories and files on the <DEST-HOST> box (if 
#   they exist)
#------------------------------------------------------------------------

# On the destination host
ssh <DEST-HOST>

# Backup the /src directory: 
sudo mv /src /tmp/src-$(date +%Y%m%d)

# Archive somewhere safe
sudo tar -czvf ~/src-$(date +%Y%m%d_%H%M%S).tar.gz /tmp/src-$(date +%Y%m%d)

# Take a simple baseline for later samity check
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary > /tmp/baseline
iocdb --observable_values 1.1.1.1 --encoder summary | wc > /tmp/baseline-wc

#------------------------------------------------------------------------
# 2 - Update the iocdb-prov box in preparation for install
#------------------------------------------------------------------------

# on the provisioner host

First, follow the instructions in ./update-provisioner.txt
ssh <PROV-HOST>

# Set environment variables
export NODE_NAME="<DEST-HOST>"
export NODE_IP="<DEST-IP>"

#------------------------------------------------------------------------
# 3 - Modify the recipes for the provisioner to tailor it to your install
#------------------------------------------------------------------------

# Verify the node file points to the correct ip and node name and it's runlist is for iocdb-cli.
#  Note: If this is a new node, you will want to create a new node file as described in the 
#        installation procedures.
# 
cat /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

# Backup the existing node file (if it exists)
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig

# If this file doesn't yet exist, chef may not have yet been installed to 
# the new machine.  Run the following command to bootstrap chef onto the new 
# host and create the node file.
cd /opt/iocdb_provisioner/iocdb-infrastructure
knife solo prepare $NODE_IP -N $NODE_NAME --bootstrap-version 11 --identity-file ~/.ssh/iocdb_nonprod_rsa

# Modify the run-list to contain only "iocdb-infrastructure::iocdb-client"
vi /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

{
  "run_list": [
    "iocdb-infrastructure::iocdb-client"
  ],
  "automatic": {
    "ipaddress": "<DEST-IP>"
  }
}

#Set the branch name to <BRANCH_NAME>
#  e.g. master, dev-ci, etc..

# edit the iocdb-client.rb file
vi /opt/iocdb_provisioner/iocdb-infrastructure/recipes/iocdb-client.rb

# Change the following git url so that it contains @<BRANCH_NAME>#egg=iocdb 
#   (replace <BRANCH-NAME> with dev-ci or master)
python_pip 'iocdb' do
  package_name 'git+ssh://iocdb_prov@iocdb-staging/staged-repos/iocdb.git@<BRANCH-NAME>#egg=iocdb'
  options '-e'
end

#------------------------------------------------------------------------
# 4 - Run chef to install the update to the iocdb-cli box
#------------------------------------------------------------------------

# Run chef to update the iocdb-cli box
cd /opt/iocdb_provisioner/iocdb-infrastructure/
knife solo cook $NODE_IP -N $NODE_NAME --identity-file ~/.ssh/iocdb_nonprod_rsa

# Note: These warnings are normal:
  WARNING: Local cookbook_path '/opt/iocdb_provisioner/iocdb-infrastructure/site-cookbooks' does not exist
  WARNING: Local role_path 'roles' does not exist
  WARNING: Local data_bag_path 'data_bags' does not exist
  WARNING: Local environment_path 'environments' does not exist

# restore the original node file
cp -p /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json.orig /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DEST-HOST>.json

#------------------------------------------------------------------------
# 5 - Configure the new host
#------------------------------------------------------------------------
# On the new host
ssh <DEST-HOST>

# Compare differences - You'll need to add any new configuration back after restoring original below
diff /tmp/src-$(date +%Y%m%d)/iocdb/iocdb/data/settings.yaml /src/iocdb/iocdb/data/settings.yaml

# Update the configuration file manually if needed.  Note: config is automatically installed 
#   now and should be correct. If not correct, a change needs to be made in the 
#   iocdb-infrastructure.git repo and checked in to add the changes to the template.

# Test it
iocdb --observable_values 1.1.1.1
# make sure these are like baseline in /tmp/baseline*
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary | wc

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# End of update the cli on the dispatcher (celery worker) box
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
