#============================================================================
# Used to update the dispatcher (celery worker) box 
#============================================================================

#------------------------------------------------------------------------
# 0 - Update the iocdb-prov box in preparation for install
#------------------------------------------------------------------------

# on the provisioner host
ssh <PROV-HOST>

# Follow the instructions in ./update-provisioner.txt
view /opt/iocdb_provisioner/iocdb-infrastructure/deployment-procedures/update-provisioner.txt

#------------------------------------------------------------------------
# 0.2 Preparation on destination host
#------------------------------------------------------------------------

# On the feed client box
ssh <DISPATCHER-HOST>

# Note: This only has to be done once.  If it's been done before, you can 
#       skip this step.
# 
#   Verify you can reach the iocdb-staging server from iocdb_prov user and 
#   root.  If this doesn't work the chef installation will fail as it will 
#   be unable to access and deploy repository files.  If either of these 
#   fail, copy the following files from the provisioner host into 
#   the iocdb_prov and root accounts:
#     ~iocdb_prov/.ssh/config
#     ~iocdb_prov/.ssh/<SSH-KEY>

## Test access as iocdb_prov user - Should log in without password prompt
ssh iocdb-staging

## Test access as root - Should log in without password prompt
sudo su -
[root]# ssh iocdb-staging

#------------------------------------------------------------------------
# 1 Backup important directories and files on the <DISPATCHER-HOST> box and
#   stop the celery worker, celery beat and rabbitmq server processes
#------------------------------------------------------------------------

# On the destination host
ssh <DISPATCHER-HOST>

# Take a simple baseline for later sanity check
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary > /tmp/baseline
iocdb --observable_values 1.1.1.1 --encoder summary | wc > /tmp/baseline-wc
cat /tmp/baseline-wc

# Backup the /src directory: 
#   Note: If you've done this once today, be careful that you don't overwrite 
#         the prior backup. 
sudo mv /src /tmp/src-$(date +%Y%m%d)

# Archive somewhere safe
sudo tar -czvf ~/src-$(date +%Y%m%d_%H%M%S).tar.gz /tmp/src-$(date +%Y%m%d)

# Stop the processes
sudo service celery-flower stop
sudo service celery-beat stop
sudo service celery-worker stop
sudo service rabbitmq-server stop

# Make sure they have stopped
ps -ef | grep celery
ps -ef | grep rabbit

# Double check the host name and ip address (Used in the next sections)
echo "`hostname` / `hostname -I`"

#------------------------------------------------------------------------
# 2 - Setup iocdb-prov environment
#------------------------------------------------------------------------

# on the provisioner host
ssh <PROV-HOST>

# Set environment variables
export NODE_NAME="<DISPATCHER-HOST>" NODE_IP="<DISPATCHER-IP>"
# This should match the host and ip address shown earlier
echo "$NODE_NAME / $NODE_IP"

#------------------------------------------------------------------------
# 3 - Modify the recipes for the provisioner to tailor it to your install
#------------------------------------------------------------------------

# Verify the node file points to the correct ip and node name and it's 
#  runlist contains:
#    "iocdb-infrastructure::rabbitmq",
#    "iocdb-infrastructure::iocdb-worker"
cat /opt/iocdb_provisioner/iocdb-infrastructure/nodes/<DISPATCHER-HOST>.json

{
  "run_list": [
    "iocdb-infrastructure::rabbitmq",
    "iocdb-infrastructure::iocdb-worker"
  ],
  "automatic": {
    "ipaddress": "<DISPATCHER-IP>"
  }
}

# If it is not correct, backup the file, modify it so that it is correct.
#   Make sure to check it in to the iocdb-infrastrucure git repo.

# Note:  Do these steps only if the file does not exist yet.
# 
##   If this file doesn't yet exist, chef was likely not yet installed to 
##   the new destination machine.  Run the following command to bootstrap 
##   chef onto the new host and create the node file.  If you create the 
##   file make sure it gets checked in to the iocdb-infrastructure repo.
cd /opt/iocdb_provisioner/iocdb-infrastructure
knife solo prepare $NODE_IP -N $NODE_NAME --bootstrap-version 11 --identity-file ~/.ssh/<SSH-KEY>

#------------------------------------------------------------------------
# 4 - Run chef to install the update to the iocdb-cli box
#------------------------------------------------------------------------

# Run chef to update the iocdb-cli box
cd /opt/iocdb_provisioner/iocdb-infrastructure/
knife solo cook $NODE_IP -N $NODE_NAME --identity-file ~/.ssh/<SSH-KEY>

# Note: These warnings are normal:
  WARNING: Local cookbook_path '/opt/iocdb_provisioner/iocdb-infrastructure/site-cookbooks' does not exist
  WARNING: Local role_path 'roles' does not exist
  WARNING: Local data_bag_path 'data_bags' does not exist
  WARNING: Local environment_path 'environments' does not exist

#------------------------------------------------------------------------
# 5 - Configure the new host
#------------------------------------------------------------------------
# On the new host
ssh <DISPATCHER-HOST>

# Compare differences - You'll need to add any new configuration back after restoring original below
#   Update the configuration file manually if needed.  Note: If changes are needed, 
#   they need to be checked into the iocdb-infrastructure.git repo (in the template dir).
diff /tmp/src-$(date +%Y%m%d)/iocdb/iocdb/data/settings.yaml /src/iocdb/iocdb/data/settings.yaml

# Note: Only do this step if you've made a change to the config file.  
#   If you have made any changes, you will need to reinstall iocdb to the python dist.
cd /src/iocdb
python setup.py uninstall <- Note this doesn't work - fix TBD
python setup.py install

# Test it
iocdb --observable_values 1.1.1.1
# make sure these are like baseline in /tmp/baseline*
*** Does not currently work *** 
iocdb --observable_values 1.1.1.1 --encoder summary
iocdb --observable_values 1.1.1.1 --encoder summary | wc

# Check that the correct version of iocdb was installed
iocdb --version

#------------------------------------------------------------------------
# 6 - Bounce the celery and rabbitmq processes
#------------------------------------------------------------------------

# open another terminal on the box and tail the logs
cd /var/data/log
tail -f *

# Restart main processes in main terminal window while watching logs
sudo service celery-flower stop
sudo service celery-beat stop
sudo service celery-worker stop
sudo service rabbitmq-server stop

# Make sure they have stopped
ps -ef | grep celery
ps -ef | grep rabbit

# start em up
sudo service rabbitmq-server start
sudo service celery-worker start
sudo service celery-beat start
sudo service celery-flower start

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# End of update the cli on the dispatcher (celery worker) box
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


